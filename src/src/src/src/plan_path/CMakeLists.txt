#set(CMAKE_BUILD_TYPE Release)
cmake_minimum_required(VERSION 2.8.3)
project(path_search)

find_package(catkin REQUIRED COMPONENTS 
    roscpp 
    std_msgs
    nav_msgs
    visualization_msgs 
    
)

find_package(Eigen3 REQUIRED)
find_package(PCL REQUIRED)
find_package(PkgConfig REQUIRED)
pkg_check_modules(YAMLCPP yaml-cpp REQUIRED)
if(YAMLCPP_VERSION VERSION_GREATER "0.5.0")
    add_definitions(-DHAVE_YAMLCPP_GT_0_5_0)
endif()
set(Eigen3_INCLUDE_DIRS ${EIGEN3_INCLUDE_DIR})

catkin_package(
  INCLUDE_DIRS include
)

include_directories(
    include 
    SYSTEM 
    third_party
    ${catkin_INCLUDE_DIRS} 
    ${Eigen3_INCLUDE_DIRS} 
    ${PCL_INCLUDE_DIRS}
)

# set(CMAKE_CXX_FLAGS "-std=c++14 ${CMAKE_CXX_FLAGS} -O3 -Wall") 

# -Wextra -Werror

add_executable( demo_node 
    src/main.cpp
  #  src/Astar_searcher.cpp
 #   src/read_only/JPS_utils.cpp
 #   src/read_only/JPS_searcher.cpp
    )
add_executable( candidate_node 
    src/candidate.cpp
  #  src/Astar_searcher.cpp
 #   src/read_only/JPS_utils.cpp
 #   src/read_only/JPS_searcher.cpp
    )
target_link_libraries(candidate_node 
    ${catkin_LIBRARIES}
    ${PCL_LIBRARIES} 
    ${YAMLCPP_LIBRARIES}
)
target_link_libraries(demo_node 
    ${catkin_LIBRARIES}
    ${PCL_LIBRARIES} 
    ${YAMLCPP_LIBRARIES}
)
